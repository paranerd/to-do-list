name: CI/CD

on:
  push:
    tags:
      - 'v*.*.*'

  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        mongodb-version: ['4.4']

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - name: Install server dependencies
        working-directory: ./server
        run: npm ci

      - name: Test server
        working-directory: ./server
        run: npm test

      - name: Install client dependencies
        working-directory: ./client
        run: npm ci

      - name: Test client
        working-directory: ./client
        run: npm test -- --no-watch --no-progress --browsers=ChromeHeadlessCI

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repo
        uses: actions/checkout@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # Repository to push to
          images: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/to-do-list

          # Use GitHub tag as version
          tags: |
            type=semver,pattern={{raw}}
          
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
